exit
continue
curr_char
continue
curr_char
exit
curr_char
continue
curr_char
exit
curr_char
word
continue
curr_char
exit
curr_char
token
continue
curr_char
continue
token
curr_char
continue
curr_char
next
curr_char
continue
curr_char
continue
exit
curr_char
continue
exit
curr_char
continue
curr_char
exit
input[read_position]
input.size
input
read_position
self
exit
curr_char
exit
i.size
puts i
i
next
h = 1
exit
i = 1
next
exit
helo info
i = "let helloWorld = 10;"
exit
i = "let helloWorld = 10;"
Lexer.new(input: 'let helloWorld = 10;').read_identifier
exit
input[read_position]
self.move_position
input[read_position]
self.move_position
input[read_position]
read_position >= input.size
input.size
read_position
